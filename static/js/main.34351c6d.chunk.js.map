{"version":3,"sources":["App.module.css","serviceWorker.js","dal/api.js","redux/reducer.js","redux/authReducer.js","store.js","utils/validators.js","components/FormControl/FormControl.jsx","components/Login/Login.jsx","components/Item/TodoListTasks/TodoListTask.jsx","components/Item/TodoListTasks/TodoListTasks.jsx","components/Item/TodoListFooter/TodoListFooter.jsx","components/Item/TodoListHeader/AddNewItemForm.jsx","components/Item/TodoListHeader/TodoListTitle.jsx","components/Item/TodoList/TodoList.jsx","components/Item/Item.jsx","components/Item/ItemContainer.jsx","App.js","index.js","components/Item/TodoList/TodoList.module.css","components/Login/Login.module.css","components/Item/Item.module.css","components/Item/TodoListTasks/TodoListTask.module.css","components/Item/TodoListFooter/TodoListFooter.module.css","images/basket.svg","components/FormControl/FormControl.module.css","components/Item/TodoListHeader/TodoListInputForm.module.css"],"names":["module","exports","appWrapper","Boolean","window","location","hostname","match","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","newTaskTitle","todolistId","post","concat","title","taskId","get","task","obj","put","Object","objectSpread2","delete","newTodolistTitle","authAPI","then","response","data","email","password","rememberMe","arguments","length","undefined","ADD_TASK","initState","todolists","addTaskTC","newText","dispatch","res","newTask","item","type","addTask","setAuthUserData","userId","login","isAuth","payload","getAuthUserData","resultCode","_res$data","id","reducers","combineReducers","reducer","state","action","toConsumableArray","newTodoList","map","t","tasks","filter","todo","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","required","value","maxLengthCreator","maxLength","Input","_ref","input","meta","props","objectWithoutProperties","hasError","touched","error","react_default","a","createElement","className","mod","formControl","assign","maxLength20","maxLength40","LoginReducerForm","reduxForm","onSubmit","handleSubmit","loginForm","Field","component","name","placeholder","validate","connect","react_router","to","loginTitle","formData","testData","TodoListTask","_this","classCallCheck","this","_super","call","editMode","activateEditMode","setState","deactiveEditMode","changeTitle","onIsDoneChanged","e","status","currentTarget","checked","changeIsDoneStatus","onTitleChanged","onDeleteTask","deleteTask","render","toDoListDoneClass","done","todoListTask","onChange","todoListTaskItem","onBlur","autoFocus","onClick","todoListTaskDelete","src","basket","alt","React","Component","TodoListTasks","tasksElement","TodoListTasks_TodoListTask","key","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onComplitedFilterClick","onActiveFilterClick","onHideFilterClick","onShowFilterClick","classForAll","filterValue","filterActive","classForCompleted","classForActive","todoListFooter","AddNewItemForm","onInputTextChange","onAddNewItemTitle","newTitle","addNewTitle","onPressEnter","errorInput","todoListHeader","todoListNewTaskForm","onKeyPress","TodoListTitle","activeEditMode","changeTodolist","changeTodolistTitle","todolistTitleInput","todolistHeaderTitle","TodoList","nextTaskId","restoreState","loadTasks","newFilterValue","changeTask","changedTask","find","deleteTodolist","_this$props$tasks","App","todoList","TodoListHeader_TodoListTitle","todoListDeleteButton","TodoListHeader_AddNewItemForm","todoListContent","Item_TodoListTasks_TodoListTasks","Item_TodoListFooter_TodoListFooter","TodoListConnected","allTasks","items","setTasks","loadTasksTC","changeTaskTC","deleteTaskTC","deleteTodolistTC","changeTodoListTC","Item","newTodoListId","addNewTodolist","addTodolist","Item_TodoList_TodoList","itemHeader","logout","ItemContainer","setTodolists","components_Item_Item","ConnectedItemContainer","thunk","path","components_Login_Login","Item_ItemContainer","ReactDOM","react_redux_es","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p"],"mappings":"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","file":"static/js/main.34351c6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1y6-z\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '2a70584b-20f7-4ff5-8c15-684fb9f4be7b'}\r\n});\r\n\r\nexport const api = {\r\n    createTask(newTaskTitle, todolistId) {\r\n        let promise = instance.post(`/todo-lists/${todolistId}/tasks`,\r\n            {title: newTaskTitle});\r\n        return promise;\r\n    },\r\n    getTasks(taskId) {\r\n        let promise = instance.get(`/todo-lists/${taskId}/tasks`);\r\n        return promise;\r\n    },\r\n    updateTask(task, obj) {\r\n        let promise = instance.put('/todo-lists/tasks',{...task, ...obj});\r\n        return promise;\r\n    },\r\n    deleteTask(taskId) {\r\n        let promise = instance.delete(`/todo-lists/tasks/${taskId}`);\r\n        return promise;\r\n    },\r\n    deleteTodolist(todolistId) {\r\n        let promise = instance.delete(`/todo-lists/${todolistId}`);\r\n        return promise;\r\n    },\r\n    getTodolists() {\r\n        let promise = instance.get('/todo-lists');\r\n        return promise;\r\n    },\r\n    createTodolists(newTodolistTitle) {\r\n        let promise = instance.post('/todo-lists',{title: newTodolistTitle});\r\n        return promise;\r\n    },\r\n    updateTodolist(todolistId, newTodolistTitle) {\r\n        let promise = instance.put(`/todo-lists/${todolistId}`, {title: newTodolistTitle});\r\n        return promise;\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    authMe(){\r\n        let promise = instance.get('/auth/me')\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n        return promise;\r\n    },\r\n   login(email, password, rememberMe = false){\r\n        let promise = instance.post('/auth/login', {email, password, rememberMe})\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n        return promise;\r\n    },\r\n    logout(){\r\n        let promise = instance.delete('/auth/login')\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n        return promise;\r\n    }\r\n};","import {api} from \"../dal/api\";\r\n\r\nconst ADD_TODOLIST = 'TodoList/Reducer/ADD_TODOLIST';\r\nconst addTodolist = (newTodoList) => ({type: ADD_TODOLIST, newTodoList});\r\nconst DELETE_TODOLIST = 'TodoList/Reducer/DELETE_TODOLIST';\r\nconst deleteTodolist = (todolistId) => ({type: DELETE_TODOLIST, todolistId});\r\nconst ADD_TASK = 'TodoList/Reducer/ADD_TASK';\r\nconst addTask = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\nconst CHANGE_TASK = 'TodoList/Reducer/CHANGE_TASK';\r\nconst changeTask = (taskId, obj, todolistId) => ({type: CHANGE_TASK, taskId, obj, todolistId});\r\nconst DELETE_TASK = 'TodoList/Reducer/DELETE_TASK';\r\nconst deleteTask = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\r\nconst SET_TODOLISTS = 'TodoList/Reducer/SET_TODOLISTS';\r\nconst setTodolist = (todolists) => ({type: SET_TODOLISTS, todolists});\r\nconst SET_TASKS = 'TodoList/Reducer/SET_TASKS';\r\nconst setTasks = (tasks, todolistId) => ({type: SET_TASKS, tasks, todolistId});\r\nconst CHANGE_TODOLIST = 'TodoList/Reducer/CHANGE_TODOLIST';\r\nconst changeTodolist = (todolistId, newTodolistTitle) => ({type: CHANGE_TODOLIST, todolistId, newTodolistTitle});\r\n\r\nconst initState = {\r\n    todolists: []\r\n};\r\n\r\nexport const todolistReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodoList]\r\n            };\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(t => ({...t, tasks: []}))\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(t => {\r\n                    return t.id !== action.todolistId\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(t => {\r\n                    if (t.id === action.todolistId) {\r\n                        return {...t, tasks: [...t.tasks, action.newTask]}\r\n                    } else {\r\n                        return t\r\n                    }\r\n                })\r\n            };\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(t => {\r\n                    if (t.id === action.todolistId) {\r\n                        return {...t, tasks: action.tasks}\r\n                    } else {\r\n                        return t\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id === action.todolistId) {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.map(task => {\r\n                                if (task.id === action.taskId) {\r\n                                    return {...task, ...action.obj};\r\n                                } else {\r\n                                    return task;\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return todo\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id === action.todolistId) {\r\n                        return {...todo}\r\n                    } else {\r\n                        return todo\r\n                    }\r\n                })\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(todo => {\r\n                    if (todo.id === action.todolistId) {\r\n                        return {\r\n                            ...todo,\r\n                            tasks: todo.tasks.filter(task => {\r\n                                return task.id !== action.taskId\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return todo\r\n                    }\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ThunkCreators\r\n\r\nexport const loadTasksTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.getTasks(todolistId)\r\n            .then(res => {\r\n                let allTasks = res.data.items;\r\n                dispatch(setTasks(allTasks, todolistId));\r\n            });\r\n    };\r\n};\r\n\r\nexport const addTaskTC = (newText, todolistId) => {\r\n    return (dispatch) => {\r\n        api.createTask(newText, todolistId)\r\n            .then(res => {\r\n                let newTask = res.data.data.item;\r\n                dispatch(addTask(newTask, todolistId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const changeTaskTC = (taskId, todolistId, task, obj) => {\r\n    return (dispatch) => {\r\n        api.updateTask(task, obj)\r\n            .then(res => {\r\n                dispatch(changeTask(taskId, obj, todolistId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const deleteTaskTC = (todolistId, taskId) => (dispatch) => {\r\n    api.deleteTask(taskId)\r\n        .then(res => {\r\n            dispatch(deleteTask(todolistId, taskId));\r\n        });\r\n};\r\n\r\nexport const setTodoListTC = () => (dispatch) => {\r\n    api.getTodolists()\r\n        .then(res => {\r\n            dispatch(setTodolist(res.data));\r\n        });\r\n};\r\n\r\nexport const addTodoListTC = (title) => {\r\n    return (dispatch) => {\r\n        api.createTodolists(title)\r\n            .then(res => {\r\n                let todolists = res.data.data.item;\r\n                dispatch(addTodolist(todolists));\r\n            });\r\n    }\r\n};\r\n\r\nexport const changeTodoListTC = (todolistId, newTodolistTitle) => {\r\n    return (dispatch) => {\r\n        debugger\r\n        api.updateTodolist(todolistId, newTodolistTitle)\r\n            .then(res => {\r\n                debugger\r\n                dispatch(changeTodolist(todolistId, newTodolistTitle));\r\n            })\r\n    }\r\n};\r\n\r\nexport const deleteTodolistTC = (todolistId) => (dispatch) => {\r\n    api.deleteTodolist(todolistId)\r\n        .then(res => {\r\n            dispatch(deleteTodolist(todolistId));\r\n        });\r\n};","import {authAPI} from \"../dal/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'TodoList/Reducer/SET_AUTH_USER_DATA';\r\nconst setAuthUserData = (userId, email, login, isAuth) => (\r\n    {type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth}}\r\n);\r\n\r\nconst initState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ThunkCreators\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.authMe()\r\n        .then(res => {\r\n            if (res.resultCode === 0) {\r\n                let {id, email, login} = res.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(res => {\r\n            if (res.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            }\r\n        })\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n};","import React from 'react';\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {todolistReducer} from \"./redux/reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {authReducer} from \"./redux/authReducer\";\r\n\r\nlet reducers = combineReducers({\r\n   reducer: todolistReducer,\r\n   auth: authReducer,\r\n   form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nexport const required = (value) => {\r\n  if(value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport mod from './FormControl.module.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={mod.formControl + ' ' + (hasError && mod.error)}>\r\n            <input {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport mod from './Login.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Input} from \"../FormControl/FormControl\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {login} from \"../../redux/authReducer\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst maxLength40 = maxLengthCreator(40);\r\n\r\nexport let LoginForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={mod.loginForm}>\r\n        <Field component={Input} name={'email'} placeholder={'Email'}\r\n               validate={[required, maxLength40]}/>\r\n        <Field component={Input} name={'password'} type={'password'} placeholder={'Password'}\r\n               validate={[required, maxLength20]}/>\r\n        <div><Field component={Input} type={'checkbox'} name={'rememberMe'}/>remember me</div>\r\n        <button>Login</button>\r\n    </form>\r\n};\r\n\r\nlet Login = (props) => {\r\n\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/todolist'/>\r\n    }\r\n\r\n    return (\r\n        <div className={mod.login}>\r\n            <div className={mod.loginTitle}>Login</div>\r\n            <LoginReducerForm onSubmit={onSubmit}/>\r\n            <div className={mod.testData}>\r\n                Тестовые e-mail и password:\r\n                <div>E-mail: <span>free@samuraijs.com</span></div>\r\n                <div>Password: <span>free</span></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport let LoginReducerForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n","import React from 'react';\r\nimport mod from './TodoListTask.module.css';\r\nimport basket from '../../../images/basket.svg';\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n    deactiveEditMode = () => {\r\n        this.props.changeTitle(this.props.task.id, this.state.title);\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let status = e.currentTarget.checked ? 2 : 0;\r\n        this.props.changeIsDoneStatus(this.props.task.id, status);\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({title: e.currentTarget.value});\r\n    };\r\n\r\n    onDeleteTask = () => {\r\n        this.props.deleteTask(this.props.task.id)\r\n    };\r\n\r\n    render = () => {\r\n\r\n        let toDoListDoneClass = this.props.task.status ? `${mod.done}` : '';\r\n\r\n        return (\r\n            <div className={mod.todoListTask}>\r\n                <input type=\"checkbox\" id='check' checked={this.props.task.status === 2}\r\n                       onChange={this.onIsDoneChanged}/>\r\n                <div className={mod.todoListTaskItem}>\r\n                    <div>\r\n                        {this.state.editMode\r\n                            ? <input onBlur={this.deactiveEditMode} onChange={this.onTitleChanged}\r\n                                     autoFocus={true} value={this.state.title}/>\r\n                            :\r\n                            <span onClick={this.activateEditMode} className={toDoListDoneClass}>{this.props.task.title}\r\n                                </span>}\r\n                    </div>\r\n                    <button className={mod.todoListTaskDelete} onClick={this.onDeleteTask}><img src={basket}\r\n                                                                                                alt=\"basket\"/></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTask;","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render = () => {\r\n\r\n        let tasksElement = this.props.tasks.map(task =>\r\n            <TodoListTask key={task.id}\r\n                          task={task}\r\n                          changeIsDoneStatus={this.props.changeIsDoneStatus}\r\n                          changeTitle={this.props.changeTitle}\r\n                          deleteTask={this.props.deleteTask} />);\r\n\r\n        return (\r\n            <div>\r\n                {tasksElement}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;","import React from 'react';\r\nimport mod from './TodoListFooter.module.css'\r\n\r\nclass TodoListFooter extends React.Component{\r\n\r\n    state = {\r\n        isHidden: false\r\n    };\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All');\r\n    };\r\n\r\n    onComplitedFilterClick = () => {\r\n        this.props.changeFilter('Completed');\r\n    };\r\n\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active');\r\n    };\r\n\r\n    onHideFilterClick = () => {\r\n        this.setState({\r\n            isHidden: true\r\n        })\r\n    };\r\n\r\n    onShowFilterClick = () => {\r\n        this.setState({\r\n            isHidden: false\r\n        })\r\n    };\r\n\r\n    render = () => {\r\n\r\n        let classForAll = this.props.filterValue === 'All' ? `${mod.filterActive}` : '';\r\n        let classForCompleted = this.props.filterValue === 'Completed' ? `${mod.filterActive}` : '';\r\n        let classForActive = this.props.filterValue === 'Active' ? `${mod.filterActive}` : '';\r\n\r\n        return (\r\n            <div className={mod.todoListFooter}>\r\n                {!this.state.isHidden &&\r\n                <div>\r\n                    <button onClick= {() => {this.onAllFilterClick()}}\r\n                            className={classForAll}>All</button>\r\n                    <button onClick= {() => {this.onComplitedFilterClick()}}\r\n                            className={classForCompleted}>Completed</button>\r\n                    <button onClick= {() => {this.onActiveFilterClick()}}\r\n                            className={classForActive}>Active</button>\r\n                </div>}\r\n                {!this.state.isHidden && <span onClick={() => {this.onHideFilterClick()}}>hide</span>}\r\n                {this.state.isHidden && <span onClick={() => {this.onShowFilterClick()}}>show</span>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;","import React from 'react';\r\nimport mod from './TodoListInputForm.module.css';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onInputTextChange = (e) => {\r\n        this.setState({\r\n            error: false,\r\n            title: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    onAddNewItemTitle = () => {\r\n        let newTitle = this.state.title;\r\n        this.setState({title: ''});\r\n        if (newTitle === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n            this.props.addNewTitle(newTitle);\r\n        }\r\n    };\r\n\r\n    onPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddNewItemTitle();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        let errorInput = this.state.error ? 'error' : '';\r\n        return (\r\n            <div className={mod.todoListHeader}>\r\n                <div className={mod.todoListNewTaskForm}>\r\n                    <input type=\"text\" placeholder=\"New item name\"\r\n                           className={errorInput}\r\n                           onChange={this.onInputTextChange}\r\n                           onKeyPress={this.onPressEnter}\r\n                           value={this.state.title}/>\r\n                    <button onClick={() => {this.onAddNewItemTitle()}\r\n                    }>Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;","import React from 'react';\r\nimport mod from './TodoListTitle.module.css';\r\n\r\nclass TodoListTitle extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        editMode: false\r\n    };\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactiveEditMode = () => {\r\n        this.props.changeTodolist(this.state.title);\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    };\r\n\r\n    changeTodolistTitle = (e) => {\r\n        this.setState({title: e.currentTarget.value})\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                {this.state.editMode\r\n                ? <input onBlur={this.deactiveEditMode} autoFocus={true} value={this.state.title}\r\n                    onChange={this.changeTodolistTitle} className={mod.todolistTitleInput}/>\r\n                : <h3 className={mod.todolistHeaderTitle} onClick={this.activeEditMode}>{this.state.title}</h3>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTitle;","import React from 'react';\r\nimport TodoListTasks from \"../TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"../TodoListFooter/TodoListFooter\";\r\nimport AddNewItemForm from \"../TodoListHeader/AddNewItemForm\";\r\nimport {connect} from 'react-redux';\r\nimport mod from './TodoList.module.css';\r\nimport {\r\n    addTaskTC, changeTaskTC, changeTodoListTC,\r\n    deleteTaskTC, deleteTodolistTC, loadTasksTC\r\n} from \"../../../redux/reducer\";\r\nimport basket from \"../../../images/basket.svg\";\r\nimport TodoListTitle from \"../TodoListHeader/TodoListTitle\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    };\r\n\r\n    state = {\r\n        filterValue: 'All',\r\n        nextTaskId: 3\r\n    };\r\n\r\n    restoreState = () => {\r\n        this.props.loadTasks(this.props.id);\r\n    };\r\n\r\n    addTask = (newText) => {\r\n        this.props.addTask(newText, this.props.id);\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        })\r\n    };\r\n\r\n    changeTask = (taskId, obj) => {\r\n        let changedTask = this.props.tasks.find(task => {\r\n            return task.id === taskId;\r\n        });\r\n        let task = {...changedTask, ...obj};\r\n        this.props.changeTask(taskId, this.props.id, task, obj);\r\n    };\r\n\r\n    changeTodolist = (title) => {\r\n        this.props.changeTodolist(this.props.id, title);\r\n    };\r\n\r\n    changeIsDoneStatus = (taskId, status) => {\r\n        this.changeTask(taskId, {status: status})\r\n    };\r\n\r\n    changeTitle = (taskId, title) => {\r\n        this.changeTask(taskId, {title: title})\r\n    };\r\n\r\n    deleteTask = (taskId) => {\r\n        this.props.deleteTask(this.props.id, taskId);\r\n    };\r\n\r\n    deleteTodolist = () => {\r\n        this.props.deleteTodolist(this.props.id);\r\n    };\r\n\r\n    render = () => {\r\n\r\n        let {tasks = []} = this.props;\r\n\r\n        return (\r\n            <div className={mod.App}>\r\n                <div className={mod.todoList}>\r\n                    <div className={mod.todoListHeader}>\r\n                        <TodoListTitle title={this.props.title} changeTodolist={this.changeTodolist}/>\r\n                        <button onClick={() => {\r\n                            this.deleteTodolist()\r\n                        }} className={mod.todoListDeleteButton}><img src={basket} alt=\"basket\"/>\r\n                        </button>\r\n                    </div>\r\n                    <AddNewItemForm addNewTitle={this.addTask}/>\r\n                    <div className={mod.todoListContent}>\r\n                        <TodoListTasks changeIsDoneStatus={this.changeIsDoneStatus}\r\n                                       changeTitle={this.changeTitle}\r\n                                       changeTask={this.changeTask}\r\n                                       deleteTask={this.deleteTask}\r\n                                       tasks={tasks.filter(t => {\r\n                                           if (this.state.filterValue === 'All') {\r\n                                               return 2;\r\n                                           } else if (this.state.filterValue === 'Active') {\r\n                                               return t.status === 0;\r\n                                           } else {\r\n                                               return t.status === 2;\r\n                                           }\r\n                                       })}/>\r\n                    </div>\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTask: (newText, todolistId) => {\r\n            dispatch(addTaskTC(newText, todolistId));\r\n        },\r\n        loadTasks: (todolistId) => {\r\n            dispatch(loadTasksTC(todolistId));\r\n        },\r\n        changeTask: (taskId, todolistId, task, obj) => {\r\n            dispatch(changeTaskTC(taskId, todolistId, task, obj));\r\n        },\r\n        deleteTask(todolistId, taskId) {\r\n            dispatch(deleteTaskTC(todolistId, taskId));\r\n        },\r\n        deleteTodolist: (todolistId) => {\r\n            dispatch(deleteTodolistTC(todolistId));\r\n        },\r\n        changeTodolist(todolistId, newTodolistTitle) {\r\n            dispatch(changeTodoListTC(todolistId, newTodolistTitle));\r\n        }\r\n    }\r\n};\r\n\r\nconst TodoListConnected = connect(null, mapDispatchToProps)(TodoList);\r\n\r\nexport default TodoListConnected;\r\n\r\n","import React from 'react';\r\nimport mod from './Item.module.css';\r\nimport TodoList from \"./TodoList/TodoList\";\r\nimport AddNewItemForm from \"./TodoListHeader/AddNewItemForm\";\r\n\r\nclass Item extends React.Component {\r\n\r\n    state = {\r\n        newTodoListId: 0\r\n    };\r\n\r\n    addNewTodolist = (title) => {\r\n        this.props.addTodolist(title);\r\n    };\r\n\r\n    render() {\r\n\r\n        let todolists = this.props.todolists.map(t => {\r\n            return <TodoList key={t.id} id={t.id} title={t.title} tasks={t.tasks}/>\r\n        });\r\n\r\n        return (\r\n            <div className={mod.item}>\r\n                <div className={mod.itemHeader}>\r\n                    <AddNewItemForm addNewTitle={this.addNewTodolist}/>\r\n                    {this.props.isAuth\r\n                        ? <div>{this.props.login}\r\n                            <div onClick={this.props.logout} className={mod.logout}>logout</div>\r\n                        </div>\r\n                        : <div>Login</div>}\r\n                </div>\r\n                <div className={mod.App}>\r\n                    {todolists}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;\r\n\r\n","import React from 'react';\r\nimport {addTodoListTC, setTodoListTC} from \"../../redux/reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Item from \"./Item\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass ItemContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setTodolists();\r\n        this.props.setAuthUserData();\r\n    };\r\n\r\n    render() {\r\n\r\n        if(!this.props.isAuth){\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return (\r\n            <Item {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todolists: state.reducer.todolists,\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTodolist: (newTodoList) => {\r\n            const thunk = addTodoListTC(newTodoList);\r\n            dispatch(thunk);\r\n        },\r\n        setTodolists: (todolists) => {\r\n            const thunk = setTodoListTC(todolists);\r\n            dispatch(thunk);\r\n        },\r\n        setAuthUserData: (id, login, email) => {\r\n            const thunk = getAuthUserData(id, login, email);\r\n            dispatch(thunk);\r\n        },\r\n        logout: () => {\r\n            const thunk = logout();\r\n            dispatch(thunk);\r\n        }\r\n    }\r\n};\r\n\r\nconst ConnectedItemContainer = connect(mapStateToProps, mapDispatchToProps)(ItemContainer);\r\n\r\nexport default ConnectedItemContainer;\r\n\r\n","import React from 'react';\r\nimport mod from './App.module.css';\r\nimport Login from \"./components/Login/Login\";\r\nimport {Route} from \"react-router-dom\";\r\nimport ConnectedItemContainer from \"./components/Item/ItemContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={mod.appWrapper}>\r\n                <Route path='/login' render={() => <Login />}/>\r\n                <Route path='/todolist' render={() => <ConnectedItemContainer />}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"TodoList_App__JRQZK\",\"todoList\":\"TodoList_todoList__1d61V\",\"todoListHeader\":\"TodoList_todoListHeader__1ISYI\",\"todoListDeleteButton\":\"TodoList_todoListDeleteButton__3t31C\",\"todoListContent\":\"TodoList_todoListContent__24YKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__YlSvz\",\"loginForm\":\"Login_loginForm__1o_uS\",\"testData\":\"Login_testData__2CEyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Item_App__cf8h7\",\"error\":\"Item_error__1FKAG\",\"itemHeader\":\"Item_itemHeader__2PhHp\",\"logout\":\"Item_logout__3xmgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTask_todoListTask__1U9ZW\",\"done\":\"TodoListTask_done__1snSa\",\"todoListTaskDelete\":\"TodoListTask_todoListTaskDelete__2hUsi\",\"todoListTaskItem\":\"TodoListTask_todoListTaskItem__2KcQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__38KvZ\"};","module.exports = __webpack_public_path__ + \"static/media/basket.491ecf80.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__itaXp\",\"error\":\"FormControl_error__1cbW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListNewTaskForm\":\"TodoListInputForm_todoListNewTaskForm__iy0Eg\"};"],"sourceRoot":""}